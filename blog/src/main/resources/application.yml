server:
  port: 8085
spring:
  rabbitmq: #消息队列
    host: localhost
    virtual-host: /ntx
    port: 5672
    username: root
    password: 123456
  mail: #邮箱配置，用于发送邮件
    host: smtp.qq.com
    username: 2927697242@qq.com
    password: nltlcygbednxdgea
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  cloud: #nacos
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        cluster-name: HangZhou

  application:   # 标记应用名称,用于nacos注册
    name: blogService

  datasource:   #JDBC
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/blog-blog?useSSL=false&serverTimezone=UTC
    username: root
    password: 123456

  redis:   #redis
    host: 8.140.17.235
    port: 6379
    password: 123456
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 1
        time-between-eviction-runs: 10s
#      host: 192.168.80.128
  jackson: #json转换配置
    default-property-inclusion: non_null
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

  servlet:
    multipart: #文件上传
      max-file-size: 300MB
      max-request-size: 350MB
  kafka:
    bootstrap-servers: 192.168.203.131:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: blog
      enable-auto-commit: true
      auto-commit-interval: 1000ms


mybatis-plus: #mp配置
  type-aliases-package: com.ntx.blog.entity
  configuration:
    map-underscore-to-camel-case: true

logging: #日志
  level:
    com.ntx: debug

blogTypeService: #nacos负载均衡
  ribbon:
    NFLoadBalancerRuleClassName: com.alibaba.cloud.nacos.ribbon.NacosRule
#
##      props.put("bootstrap.servers", " 192.168.203.131:9092");
##      props.put("acks", "all");
##      props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
##      props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");


#eureka: #euraka ！不能和nacos同时配置
#  client:
#    service-url:
#      defaultZone: http:127.0.0.1:10086/eureka

#feign:
#  client:
#    config:
#      default:
#        logger-level: FULL #配置日志级别

#feign:
#  httpclient:
#    enabled: true #支持httpclient的开关
#    max-connections: 200 #最大连接数
#    max-connections-per-route: 50 #单个路径的最大的连接数